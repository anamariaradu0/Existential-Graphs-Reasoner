Names: Lungu Razvan
	Radu Ana-Maria
	
Finish date: 12.05.2019

Difficulties: - Finding the reason why the vector of paths to the possible deiterations
	held duplicates.

Algorithm:
	- possible_double_cuts: We know that a double cut appears when a subgraph
		has a unique son, and that is a subgraph as well. We look for these
		situations in AEGraph and we introduce the according paths in
		the 'paths_to_cuts' vector.
	- double_cut: We look recursively in AEGraph using the path given by the 'where'
		vector. We build 'updated_graph', representing the tree without the
		double cut. It is only necessary to build the vector for atoms and
		subgraphs, we make no use of the subgraph at 'where'.
	- possible_erasures: Knowing that any subgraph can be erased if it is on an even
		level or if we erase it starting from root (-1), we search recursively for
		these subgraphs in the tree and we insert the paths to them in the
		'paths_to_erasures' vector.
	-erase: The erasure of the atom/subgraph is done recursively, by modifying the
		vectors for atoms/subgraphs respectively.
	-possible_deiterations: We know that a subgraph or an atom can be deiterated
		from the tree if it repeats itself in one of its sons. We use the
		'contains' method for the vectors of atoms/subgraphs to verify this
		rule. Using 'get_paths_to', we introduce in 'paths_to_deiters' the
		paths we found. The search is recursive through the tree. Finally, we
		add the results in the solution vector.
	-deiterate: We use 'erase' to deiterate an atom/subgraph from the tree.

How we did it: Brainstorming for each function, implementing both separately and
	together, depending on the difficulties we encountered.

